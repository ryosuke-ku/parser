{'methods': [{'methodName': 'testMultiply01', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}, {'methodName': 'testMultiply02', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}, {'methodName': 'testMultiply03', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}, {'methodName': 'testMax01', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}, {'methodName': 'testMax02', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}, {'methodName': 'testMax03', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}, {'methodName': 'testMax04', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}, {'methodName': 'testDivide01', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}, {'methodName': 'testDivide02', 'callMethods': ['13 20 calc.multiply(10,20)', '14 2 assertEquals(expected,actual)', '20 20 calc.multiply(-10,20)', '21 2 assertEquals(expected,actual)', '29 20 calc.multiply(0,-20)', '30 2 assertEquals(expected,actual)', '38 20 calc.max(10,20,30)', '39 2 assertEquals(expected,actual)', '46 20 calc.max(30,20,10)', '47 2 assertEquals(expected,actual)', '54 20 calc.max(20,30,10)', '55 2 assertEquals(expected,actual)', '62 20 calc.max(30,10,20)', '63 2 assertEquals(expected,actual)', '69 9 calc.divide(10,0)', '76 26 calc.divide(10,20)', '78 6 assertEquals(expected,actual,0)']}]}
