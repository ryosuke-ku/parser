{'methods': [{'methodName': 'testMultiply01', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}, {'methodName': 'testMultiply02', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}, {'methodName': 'testMultiply03', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}, {'methodName': 'testMax01', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}, {'methodName': 'testMax02', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}, {'methodName': 'testMax03', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}, {'methodName': 'testMax04', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}, {'methodName': 'testDivide01', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}, {'methodName': 'testDivide02', 'callMethods': ['calc.multiply(10,20)', 'assertEquals(expected,actual)', 'calc.multiply(-10,20)', 'assertEquals(expected,actual)', 'calc.multiply(0,-20)', 'assertEquals(expected,actual)', 'calc.max(10,20,30)', 'assertEquals(expected,actual)', 'calc.max(30,20,10)', 'assertEquals(expected,actual)', 'calc.max(20,30,10)', 'assertEquals(expected,actual)', 'calc.max(30,10,20)', 'assertEquals(expected,actual)', 'calc.divide(10,0)', 'calc.divide(10,20)', 'assertEquals(expected,actual,0)']}]}
